<?xml version="1.0"?>
<doc>
    <assembly>
        <name>React.AspNet</name>
    </assembly>
    <members>
        <member name="T:React.AspNet.ActionHtmlString">
            <summary>
            IHtmlString or IHtmlString action wrapper implementation
            </summary>
        </member>
        <member name="M:React.AspNet.ActionHtmlString.#ctor(System.Action{System.IO.TextWriter})">
            <summary>
            Constructor IHtmlString or IHtmlString action wrapper implementation
            </summary>
            <param name="textWriter"></param>
        </member>
        <member name="M:React.AspNet.ActionHtmlString.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)">
            <summary>
            Writes the content by encoding it with the specified <paramref name="encoder" />
            to the specified <paramref name="writer" />.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter" /> to which the content is written.</param>
            <param name="encoder">The <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> which encodes the content to be written.</param>
        </member>
        <member name="T:React.AspNet.HtmlHelperExtensions">
            <summary>
            HTML Helpers for utilising React from an ASP.NET MVC application.
            </summary>
        </member>
        <member name="P:React.AspNet.HtmlHelperExtensions.Environment">
            <summary>
            Gets the React environment
            </summary>
        </member>
        <member name="M:React.AspNet.HtmlHelperExtensions.React``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,``0,System.String,System.String,System.Boolean,System.Boolean,System.String,System.Action{System.Exception,System.String,System.String})">
            <summary>
            Renders the specified React component
            </summary>
            <typeparam name="T">Type of the props</typeparam>
            <param name="htmlHelper">HTML helper</param>
            <param name="componentName">Name of the component</param>
            <param name="props">Props to initialise the component with</param>
            <param name="htmlTag">HTML tag to wrap the component in. Defaults to &lt;div&gt;</param>
            <param name="containerId">ID to use for the container HTML tag. Defaults to an auto-generated ID</param>
            <param name="clientOnly">Skip rendering server-side and only output client-side initialisation code. Defaults to <c>false</c></param>
            <param name="serverOnly">Skip rendering React specific data-attributes, container and client-side initialisation during server side rendering. Defaults to <c>false</c></param>
            <param name="containerClass">HTML class(es) to set on the container tag</param>
            <param name="exceptionHandler">A custom exception handler that will be called if a component throws during a render. Args: (Exception ex, string componentName, string containerId)</param>
            <returns>The component's HTML</returns>
        </member>
        <member name="M:React.AspNet.HtmlHelperExtensions.ReactWithInit``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,``0,System.String,System.String,System.Boolean,System.String,System.Action{System.Exception,System.String,System.String})">
            <summary>
            Renders the specified React component, along with its client-side initialisation code.
            Normally you would use the <see cref="M:React.AspNet.HtmlHelperExtensions.React``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,``0,System.String,System.String,System.Boolean,System.Boolean,System.String,System.Action{System.Exception,System.String,System.String})"/> method, but <see cref="M:React.AspNet.HtmlHelperExtensions.ReactWithInit``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,``0,System.String,System.String,System.Boolean,System.String,System.Action{System.Exception,System.String,System.String})"/>
            is useful when rendering self-contained partial views.
            </summary>
            <typeparam name="T">Type of the props</typeparam>
            <param name="htmlHelper">HTML helper</param>
            <param name="componentName">Name of the component</param>
            <param name="props">Props to initialise the component with</param>
            <param name="htmlTag">HTML tag to wrap the component in. Defaults to &lt;div&gt;</param>
            <param name="containerId">ID to use for the container HTML tag. Defaults to an auto-generated ID</param>
            <param name="clientOnly">Skip rendering server-side and only output client-side initialisation code. Defaults to <c>false</c></param>
            <param name="containerClass">HTML class(es) to set on the container tag</param>
            <param name="exceptionHandler">A custom exception handler that will be called if a component throws during a render. Args: (Exception ex, string componentName, string containerId)</param>
            <returns>The component's HTML</returns>
        </member>
        <member name="M:React.AspNet.HtmlHelperExtensions.ReactInitJavaScript(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean)">
            <summary>
            Renders the JavaScript required to initialise all components client-side. This will
            attach event handlers to the server-rendered HTML.
            </summary>
            <returns>JavaScript for all components</returns>
        </member>
    </members>
</doc>
